# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JSaK6LjOtQLDDxRI_pzT4rm1W6pfmAIA
"""

# app.py

import streamlit as st
import pandas as pd
import openai

# CONFIGURA TU CLAVE DE OPENAI
openai.api_key = "TU_API_KEY"

# CARGAR ARCHIVO DE PROPIEDADES (Excel exportado)
@st.cache_data
def cargar_datos():
    return pd.read_excel("propiedades_bogota_10.xlsx")

df = cargar_datos()

# FUNCIONES
def generar_filtro(pregunta, columnas):
    prompt = f"""
Eres un asistente de bienes ra√≠ces. Dada esta pregunta: '{pregunta}', genera un filtro de pandas para el DataFrame df, usando las columnas: {columnas}. Solo devuelve el c√≥digo.
"""
    respuesta = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "Eres un generador de c√≥digo pandas."},
            {"role": "user", "content": prompt}
        ]
    )
    return respuesta.choices[0].message.content

def corregir_filtro(codigo):
    codigo = codigo.replace("True", "'S√≠'").replace("False", "'No'")
    codigo = codigo.replace("'Arriendo'", "'Alquiler'")
    return codigo

# INTERFAZ
st.title("üè† Agente Inmobiliario Virtual")

st.write("Selecciona una pregunta para consultar propiedades:")

preguntas = [
    "¬øQu√© propiedades hay en arriendo en Chapinero?",
    "¬øTienes casas con parqueadero en Suba?",
    "Propiedades en venta por menos de 400 millones",
    "Apartamentos de 2 ba√±os en Engativ√°",
    "¬øQu√© propiedades hay disponibles en Teusaquillo?",
    "Casas de 3 habitaciones en venta"
]

pregunta = st.selectbox("üß† Pregunta", preguntas)
columnas = df.columns.tolist()

if st.button("üîç Buscar propiedades"):
    try:
        codigo = generar_filtro(pregunta, columnas)
        st.code(codigo, language='python')
        codigo_corregido = corregir_filtro(codigo)
        resultado = eval(codigo_corregido)
        if not resultado.empty:
            st.success(f"{len(resultado)} propiedades encontradas:")
            st.dataframe(resultado)
        else:
            st.warning("No se encontraron propiedades para esta consulta.")
    except Exception as e:
        st.error(f"Error procesando la consulta: {e}")

# Commented out IPython magic to ensure Python compatibility.
# %pip install streamlit

"""After the installation is complete, you can run the code again."""